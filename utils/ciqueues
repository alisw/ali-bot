#!/usr/bin/bash -e
mode=nomad
case $1 in
  -a|--aurora) mode=aurora; shift ;;
  -n|--nomad) mode=nomad; shift ;;
  -h|--help)
    cat << EOF
usage: $(basename "$0") [-han] ROLE CONTAINER [SUFFIX]

  -h, --help    show this help message and exit
  -a, --aurora  query Aurora for running CI builders
  -n, --nomad   query Nomad for running CI builders (default)
EOF
    exit ;;
esac

declare -r role=$1 container=$2 suffix=$3
: "${role:?you must supply a Mesos role as the first argument}" \
  "${container:?you must supply a container arch as the second argument}"

declare -a instances
mapfile -t instances < <(
  case $mode in
    aurora)
      REQUESTS_CA_BUNDLE=${XDG_CONFIG_HOME:-$HOME/.config}/cern-ca-bundle.crt \
        aurora job status "build/$role/prod/ci_alisw_$container-builder_latest$suffix" 2>/dev/null |
        sed -rn '/^Inactive tasks/,$d; s/.*instance: ([0-9]+).*/\1/p' ;;
    nomad)
      NOMAD_TOKEN=$(pass cern/ci/nomad-bootstrap-token | head -1) \
        nomad job allocs -t '{{range .}}{{println .ID}}{{end}}' "ci-$role-$container$suffix" |
        sed '/^$/d' ;;
    *) echo "unknown mode: $mode" >&2; exit 1 ;;
  esac
)

GITHUB_TOKEN=$(pass personal/github-token | head -1)
export GITHUB_TOKEN

cd
declare -i i=0
for instance_id in "${instances[@]}"; do
  queue=$(ali-bot/list-branch-pr -i "$i" -n "${#instances[@]}" -r "$role" -c "$container" -s "$suffix" 2>/dev/null |
            cut -f 1,2,4 | tr '\t' ' ' | sed 's/^untested\b/U/; s/^failed\b/F/; s/^succeeded\b/S/; s/^/\t/')
  if [ -z "$queue" ]; then
    echo "worker $i/${#instances[@]} ($instance_id): (nothing to do)"
  else
    echo "worker $i/${#instances[@]} ($instance_id): (length $(echo "$queue" | wc -l))"
    echo "$queue"
  fi
  (( ++i )) || :
done
