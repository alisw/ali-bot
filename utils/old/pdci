#!/bin/bash -e

help () {
  cat <<EOF
usage: $(basename "$0") [-ml] COMMAND [ARGS...]

Run a command inside all CI Nomad task directories simultaneously.

  -m       run on MacOS machines
  -l       run on Linux machines
  COMMAND  command to run
  ARGS...  optional arguments to COMMAND

ARGS will be quoted, but COMMAND will not be. If neither of -m, -l is given, -ml is assumed.
EOF
  exit "${1:?exit code not given to 'help' function}"
}

die () {
  echo "$(basename "$0"): error: $*" >&2
  help 1 >&2
}

quote () {
  echo "'$(echo "$1" | sed "s/'/'\\\\''/g")'"
}

while getopts ':hanml' opt; do
  case "$opt" in
    h) help 0 ;;
    m) run_mac=1 ;;
    l) run_linux=1 ;;
    :) die "option requires an argument: -$OPTARG" ;;
    *) die "unknown option: -$OPTARG" ;;
  esac
done
shift $((OPTIND - 1))

if [ -z "$run_linux$run_mac" ]; then
  run_linux=1 run_mac=1
fi

real_command=${1:?COMMAND is required$(die 'COMMAND is required')}
shift
for word in "$@"; do
  real_command="$real_command $(quote "$word")"
done

run_on_alloc() {
  alloc=$1
  script='
os=$(uname -s)
if [ "$os" = "Linux" ] && [ -z "'$run_linux'" ]; then exit 0; fi
if [ "$os" = "Darwin" ] && [ -z "'$run_mac'" ]; then exit 0; fi
if echo | sed -u d 2>/dev/null; then alias sed="sed -u"; fi
cd "$NOMAD_TASK_DIR"
host=$(hostname -s)
{ '"$real_command"' ; } 2>&1 | sed "s/^/$(printf \"%15s\" \"$host\"): '"$alloc"': /"
'
  nomad alloc exec "$alloc" bash -c "$script"
}

export -f run_on_alloc
export run_linux run_mac real_command

nomad job status 2>/dev/null |
  awk '/^ci-/ { print $1 }' |
  xargs -rI '{}' nomad job status '{}' 2>/dev/null |
  awk '($6 == "running" && $3 == "ci") { print $1 }' |
  xargs -rP 64 -I '{}' bash -c 'run_on_alloc "{}"'
