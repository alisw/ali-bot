#!/usr/bin/env -S bash -e
if [ "$1" = -h ] || [ "$1" = --help ]; then
  cat << EOF; exit
usage: $(basename "$0") [-h] ROLE CONTAINER [SUFFIX]

  -h, --help    show this help message and exit

  ROLE          Mesos role, e.g. "mesosci"
  CONTAINER     container arch, e.g. "slc7"
  SUFFIX        optional suffix for multiple builders with the same role and
                container, e.g. "-o2physics"
EOF
fi

readonly role=$1 container=$2 suffix=$3
: "${role:?you must supply a Mesos role as the first argument}" \
  "${container:?you must supply a container arch as the second argument}"

: "${NOMAD_TOKEN=$(pass cern/ci/nomad-bootstrap-token | head -1)}" \
  "${GITHUB_TOKEN=$(pass personal/github-token | head -1)}"
export NOMAD_TOKEN GITHUB_TOKEN

declare -a instances
mapfile -t instances < <(
  nomad job allocs -t '{{range .}}{{if eq .ClientStatus "running"}}{{println .Name .ID}}{{end}}{{end}}' \
        "ci-$role-$container$suffix" |
    # Sort by alloc index, which is appended as [N] to the name.
    sed '/^$/d' | sort | cut -f 2 -d ' '
)

declare -i i=0
for instance_id in "${instances[@]}"; do
  queue=$("$(dirname "$0")/../list-branch-pr" \
            --definitions-dir "$(dirname "$0")/../ci/repo-config" \
            -i "$i" -n "${#instances[@]}" \
            -r "$role" -c "$container" -s="$suffix" 2>/dev/null |
            cut -f 1,2,4 | sed 's/\t/ /g; s/^/\t/')
  if [ -z "$queue" ]; then
    echo "worker $i/${#instances[@]} ($instance_id): (nothing to do)"
  else
    echo "worker $i/${#instances[@]} ($instance_id): (length $(echo "$queue" | wc -l))"
    echo "$queue"
  fi
  (( ++i )) || :
done
