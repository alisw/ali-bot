---
# Create repositories with all O2 prerequisites plus aliBuild and push them
# upstream (e.g. to S3).
name: Build o2-full-deps repositories

# Controls when the action will run. This workflow is triggered manually.
"on":
  workflow_dispatch:

permissions: {}

jobs:
  rpm:
    runs-on: ubuntu-latest
    strategy:
      # Keep running jobs for other CentOS/Alma/Fedora versions, even if one fails.
      fail-fast: false
      matrix:
        # For every entry in el_version:, add an {el_version, container, alibuild_tag} entry to include:!
        el_version:
          - el7
          - el8
          - el9
          - fedora

        # The include: key extends the matrix specified above with extra variables.
        include:
          - el_version: el7
            container: centos:7
            alibuild_tag: v1.16.1
          - el_version: el8
            container: almalinux:8
            alibuild_tag: v1.16.1
          - el_version: el9
            container: almalinux:9
            alibuild_tag: v1.16.1
          - el_version: fedora
            container: fedora:33
            alibuild_tag: v1.16.1

    name: RPM (${{ matrix.el_version }})
    container: ${{ matrix.container }}
    env:
      ALIBUILD_TAG: ${{ matrix.alibuild_tag }}
      DISTRO: ${{ matrix.el_version }}

    steps:
      # For rpms/*.spec
      - uses: actions/checkout@v3

      - name: Install prerequisites
        run: |
          set -x
          yum clean all
          yum update -y
          yum install -y rpm-build scl-utils-build createrepo unzip git python3 python3-pip python3-setuptools
          curl https://rclone.org/install.sh | bash
          cat << EOF > /tmp/rclone.conf
          ${{ secrets.S3_RCLONE_CONFIG }}
          EOF

      - name: Build the ${{ matrix.el_version }} RPM and create a yum repo
        run: |
          set -x
          rpmbuild -ba "rpms/o2-prereq-$DISTRO.spec"
          git clone -b "$ALIBUILD_TAG" https://github.com/alisw/alibuild
          cd alibuild
          case "$DISTRO" in
            el7) deps=python3,git,python3-PyYAML,python3-requests,python3-distro ;;
            *)   deps=python3,git,python3-pyyaml,python3-requests,python3-distro ;;
          esac
          python3 setup.py bdist_rpm --requires "$deps"
          cp dist/alibuild-*.noarch.rpm ~/rpmbuild/RPMS/$(uname -m)/
          cd  ~/rpmbuild/RPMS/$(uname -m)/
          createrepo .
          ls -la
          case "$DISTRO" in
            el7) repo_suffix=_ ;;
            *) repo_suffix=_$DISTRO. ;;
          esac
          rclone --config /tmp/rclone.conf --transfers=10 --progress --delete-before \
                 sync local:./ "rpms3:alibuild-repo/RPMS/o2-full-deps${repo_suffix}x86-64/"

  deb-ubuntu:
    runs-on: ubuntu-latest
    strategy:
      # Keep running jobs for other Ubuntu versions, even if one fails.
      fail-fast: false
      matrix:
        ubuntu_codename:
          - bionic  # 18.04
          - focal   # 20.04
          - jammy   # 22.04
          - mantic  # 23.10

    name: DEB (${{ matrix.ubuntu_codename }})
    container: ubuntu:${{ matrix.ubuntu_codename }}
    env:
      ALIBUILD_TAG: v1.16.1
      ALIBUILD_DISTRO: ${{ matrix.ubuntu_codename }}
      DEBIAN_FRONTEND: noninteractive

    steps:
      - name: Install prerequisites
        run: |
          apt update
          apt install -y vim git devscripts build-essential lintian debhelper dh-python python3-all python3-setuptools python3-setuptools-scm
          gpg --import - <<\EOF
          ${{ secrets.LAUNCHPAD_PPA_GPG_KEY }}
          EOF

      - name: Build a DEB for Ubuntu and push it to the PPA
        run: |
          set -x
          git clone -b "$ALIBUILD_TAG" https://github.com/alisw/alibuild
          cd alibuild
          cat <<EOF > debian/changelog
          python3-alibuild (${ALIBUILD_TAG#v}+$ALIBUILD_DISTRO) $ALIBUILD_DISTRO; urgency=medium

            * Bump to $ALIBUILD_TAG

           -- Giulio Eulisse <giulio.eulisse@cern.ch>  $(date -R -u)
          EOF
          debuild --no-lintian -k48F330BAFFA564EF2383E2B472E9262B5C0D9DE5 -S
          dput ppa:alisw/ppa "../python3-alibuild_${ALIBUILD_TAG#v}+${ALIBUILD_DISTRO}_source.changes"
