# Create a repository with all O2 prerequisites and push it to S3.
name: o2-full-deps release

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  workflow_dispatch:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: centos:7
    env:
      ALIBUILD_TAG: v1.8.8
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a set of commands using the runners shell
      - name: Build the EL7 RPM and create a yum repo.
        run: |
          yum install -y rpm-build scl-utils-build createrepo unzip git python-setuptools
          curl https://rclone.org/install.sh | bash
          rpmbuild -ba rpms/o2-prereq.spec
          git clone -b $ALIBUILD_TAG https://github.com/alisw/alibuild
          pushd alibuild
            perl -p -i -e "s/LAST_TAG/$ALIBUILD_TAG/g" setup.py
            python setup.py bdist_rpm --requires python,git,PyYAML
            cp dist/alibuild-*.noarch.rpm ~/rpmbuild/RPMS/x86_64/ 
          popd
          cd ~/rpmbuild/RPMS/x86_64/
          createrepo .
          cat << EOF > /tmp/rclone.conf
          ${{ secrets.S3_RCLONE_CONFIG }}
          EOF
          rclone --config /tmp/rclone.conf --transfers=10 --progress --delete-before sync local:./ rpms3:alibuild-repo/RPMS/o2-full-deps_x86-64/
  build-el8:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: centos:8
    env:
      ALIBUILD_TAG: v1.8.8

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a set of commands using the runners shell
      - name: Build the EL8 RPM and create a yum repo.
        run: |
          set -xe
          yum install -y rpm-build scl-utils-build createrepo unzip git python3-setuptools python3
          curl https://rclone.org/install.sh | bash
          rpmbuild -ba rpms/o2-prereq-cc8.spec
          git clone -b $ALIBUILD_TAG https://github.com/alisw/alibuild
          pushd alibuild
            perl -p -i -e "s/LAST_TAG/$ALIBUILD_TAG/g" setup.py
            python3 setup.py bdist_rpm --requires python3,git,python3-pyyaml
            cp dist/alibuild-*.noarch.rpm ~/rpmbuild/RPMS/x86_64/
          popd
          cd  ~/rpmbuild/RPMS/x86_64/
          createrepo .
          cat << EOF > /tmp/rclone.conf
          ${{ secrets.S3_RCLONE_CONFIG }}
          EOF
          ls -la
          rclone --config /tmp/rclone.conf --transfers=10 --progress --delete-before sync local:./ rpms3:alibuild-repo/RPMS/o2-full-deps_el8.x86-64/
  build-fedora:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: fedora:33
    env:
      ALIBUILD_TAG: v1.8.8

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a set of commands using the runners shell
      - name: Build the Fedora RPM and create a yum repo.
        run: |
          set -xe
          yum install -y rpm-build scl-utils-build createrepo unzip git python3-setuptools python3
          curl https://rclone.org/install.sh | bash
          rpmbuild -ba --define '__python %__python3' rpms/o2-prereq-fedora.spec
          git clone -b $ALIBUILD_TAG https://github.com/alisw/alibuild
          pushd alibuild
            perl -p -i -e "s/LAST_TAG/$ALIBUILD_TAG/g" setup.py
            python3 setup.py bdist_rpm --requires python3,git,python3-pyyaml,python3-requests
            cp dist/alibuild-*.noarch.rpm ~/rpmbuild/RPMS/x86_64/
          popd
          cd  ~/rpmbuild/RPMS/x86_64/
          createrepo .
          cat << EOF > /tmp/rclone.conf
          ${{ secrets.S3_RCLONE_CONFIG }}
          EOF
          ls -la
          rclone --config /tmp/rclone.conf --transfers=10 --progress --delete-before sync local:./ rpms3:alibuild-repo/RPMS/o2-full-deps_fedora.x86-64/
