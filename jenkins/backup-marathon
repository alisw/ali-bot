#!groovy
node ('jekyll') {

  stage 'Secrets Setup'
  withCredentials([[$class: 'FileBinding', credentialsId: '0dd617a6-6b27-4904-becc-51e4cd56eae8', variable: 'GIT_CREDS_FILE']]) {
    withEnv(["VAULT_ADDR=${VAULT_ADDR}",
             "VAULT_SKIP_VERIFY=1",
             "BUILDER_USER=${BUILDER_USER}",
             "BUILDER_EMAIL=${BUILDER_EMAIL}",
             "VAULT_SECRET_PATH=${VAULT_SECRET_PATH}"
      ]) {
      sh '''
        git credential-store --file ~/git-creds store < ${GIT_CREDS_FILE}
        git config --global credential.helper "store --file ~/git-creds"
        ls ~/git-creds
        mkdir -p $HOME/.ssh
        git config --replace-all --global user.name ${BUILDER_USER}
        git config --replace-all --global user.email ${BUILDER_EMAIL}
      '''
    }
  }

  stage 'Fetch configuration'
  withEnv(["MARATHON_URL=${MARATHON_URL}"]) {
    retry(3) {
      timeout(60) {
        sh """
          rm -fr ali-marathon
          git clone ${BACKUP_REPO} ali-marathon
          cd ali-marathon
          ./backup-marathon
        """
      }
    }
  }

  stage 'Save to gitlab'
    retry(3) {
      timeout(60) {
        sh """
          cd ali-marathon
          git add -A *.json
          if git diff && git commit -a -m'Marathon config updated from GUI'; then
            git push
          fi
        """
    }
  }
}
