#!groovy
node ('jekyll') {

  stage 'Setup credentials'
  withCredentials([[$class: 'UsernamePasswordMultiBinding',
                    credentialsId: 'gitlab_alibuild',
                    usernameVariable: 'GIT_BOT_USER',
                    passwordVariable: 'GIT_BOT_PASS']]) {
    sh '''
      set -e
      set -o pipefail
      printf "protocol=https\nhost=gitlab.cern.ch\nusername=$GIT_BOT_USER\npassword=$GIT_BOT_PASS\n" | \
        git credential-store --file $PWD/git-creds store
    '''
  }
  withEnv(["BUILDER_USER=${BUILDER_USER}",
           "BUILDER_EMAIL=${BUILDER_EMAIL}"]) {
    sh '''
      set -e
      git config --global credential.helper "store --file $PWD/git-creds"
      ls -l $PWD/git-creds
      git config --replace-all --global user.name ${BUILDER_USER}
      git config --replace-all --global user.email ${BUILDER_EMAIL}
    '''
  }

  stage 'Fetch configuration'
  withEnv(["MARATHON_URL=${MARATHON_URL}",
           "BACKUP_REPO=${BACKUP_REPO}"]) {
    retry(3) {
      timeout(60) {
        sh """
          rm -fr ali-marathon
          git clone ${BACKUP_REPO} ali-marathon
          cd ali-marathon
          ./backup-marathon
        """
      }
    }
  }

  stage 'Push to GitLab'
    retry(3) {
      timeout(60) {
        sh """
          cd ali-marathon
          git add -A *.json
          if git diff && git commit -a -m'Marathon config updated from GUI'; then
            git push
          fi
        """
    }
  }
}
